!(function () {

	// Get current script element and attributes
	const currentScript = document.currentScript;
	let baseUrl = currentScript.getAttribute('data-base-url');
	let pagePvId = currentScript.getAttribute('data-page-pv-id');
	let pageUvId = currentScript.getAttribute('data-page-uv-id');

	const WebViso = { version: '0.1.0' };
	let apiBaseUrl = baseUrl;

	// Update configuration based on script attributes
	WebViso.page_pv_id = pagePvId || 'page_pv';
	WebViso.page_uv_id = pageUvId || 'page_uv';
	if (baseUrl) {
			apiBaseUrl = baseUrl;
	}

	// Initialize WebViso library
	WebViso.init = async function () {
			const locationInfo = parseLocation(window.location.href);
			const pagePvElement = document.getElementById(WebViso.page_pv_id);
			const pageUvElement = document.getElementById(WebViso.page_uv_id);

			const visitData = {
					url: locationInfo.pathname,
					hostname: locationInfo.hostname,
					referrer: document.referrer
			};

			if (pagePvElement) visitData.pv = true;
			if (pageUvElement) visitData.uv = true;

			// Post visit data to server
			await postVisitData(apiBaseUrl + '/api/visit', visitData)
					.then(response => {
							if (response.ret !== 'OK') {
									console.error('WebViso.init error', response.message);
									return;
							}
							const data = response.data;
							if (pagePvElement) pagePvElement.innerText = data.pv;
							if (pageUvElement) pageUvElement.innerText = data.uv;
					})
					.catch(error => {
							console.log('WebViso.init fetch error', error);
					});
	};

	// Helper function to parse URL
	const parseLocation = function (url) {
			const anchor = document.createElement('a');
			anchor.href = url;
			return anchor;
	};

	// Helper function to POST data and handle response
	const postVisitData = function (url, data) {
			return new Promise((resolve, reject) => {
					fetch(url, {
							method: 'POST',
							headers: { 'Content-Type': 'application/json' },
							body: JSON.stringify(data)
					})
							.then(response => response.json())
							.then(resolve)
							.catch(reject);
			});
	};

	// Initialize library and attach to window if it exists
	if (typeof window !== 'undefined' && apiBaseUrl) {
			WebViso.init();
			window.WebViso = WebViso;
	}
})();
